<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. -->
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" []>
<chapter>
  <title>Apps in DHIS2</title>
  <para>A packaged app is an <ulink url="https://developer.mozilla.org/en-US/docs/Open_Web_apps_and_Web_standards">Open Web App</ulink> that has all of its resources (HTML, CSS, JavaScript, app manifest, and so on)
    contained in a zip file.  It can be uploaded to a DHIS2 installation directly through the user interface at runtime. A packaged app
    is a ZIP file  with an <ulink url="http://www.w3.org/2008/webapps/manifest/">app manifest</ulink>
    in its root directory. The manifest must be named <filename>manifest.webapp</filename>. A throrough description of apps can be obtained <ulink url="https://developer.mozilla.org/en-US/Apps/Quickstart">here</ulink>.</para>
  <section>
    <title>Purpose of Packaged Apps</title>
    <para>The purpose of packaged apps is to extend the web interface of DHIS2, without the need to modify the source code of DHIS2 itself. A system deployment
      will often have custom and unique requirements. The apps provide a convenient extension point
      to the user interface. Through apps, you can complement and customize the DHIS 2 core
      functionality with custom solutions in a loosely coupled and clean manner.</para>
    <para>Apps do not have permissions to interact directly with DHIS2 Java API. Instead, apps are
      expected to use functionality and interact with the DHIS2 services and data by utilizing the
      DHIS2 Web API.</para>
  </section>
  <section>
    <title>Creating Apps</title>
    <para>DHIS2 apps are constructed with  HTML, JavaScript and CSS files, similar to any
      other web application. Apps also need  a  special file called <emphasis role="italic">manifest.webapp</emphasis> which describes the contents of the app. This file should be in
      the format specified by the <ulink url="http://www.w3.org/2008/webapps/manifest/">W3C Manifest for Web Applications</ulink>. A basic example of the <emphasis role="italic">manifest.webapp</emphasis> is shown below:</para>
    <para>
      <screen>{
    &quot;version&quot;: &quot;0.1&quot;,
    &quot;name&quot;: &quot;My App&quot;,
    &quot;description&quot;: &quot;My App is a Packaged App&quot;,
    &quot;launch_path&quot;: &quot;/index.html&quot;,
    &quot;icons&quot;: {
        &quot;16&quot;: &quot;/img/icons/mortar-16.png&quot;,
        &quot;48&quot;: &quot;/img/icons/mortar-48.png&quot;,
        &quot;128&quot;: &quot;/img/icons/mortar-128.png&quot;
    },
    &quot;developer&quot;: {
        &quot;name&quot;: &quot;Me&quot;,
        &quot;url&quot;: &quot;http://me.com&quot;
    },
    &quot;default_locale&quot;: &quot;en&quot;,
    &quot;activities&quot;: {
        &quot;dhis&quot;: {
            &quot;href&quot;: &quot;*&quot;
        }
    }
}</screen>
    </para>
    <para>The <emphasis role="italic">manifest.webapp</emphasis> file must be located at the root of
      the project. Among the properties, the <emphasis role="italic">icons→48</emphasis>
      property is used for the icon that is displayed on the list of apps that are installed on a
      DHIS 2 instance. The <emphasis role="italic">activities</emphasis> property is an
      dhis-specific extension meant to differentiate between a standard Open Web App and an app that
      can be installed in DHIS 2. The <emphasis role="italic">*</emphasis> value for <emphasis role="italic">href</emphasis> is converted to the appropriate URL when the app is uploaded
      and installed in DHIS 2. This value can then be used by the application&apos;s JavaScript and HTML
      files to make calls to the DHIS 2 Web API and identify the correct location of DHIS 2 server
      on which the app has been installed. To clarify, the <emphasis role="italic">activities</emphasis> part will look similar to this after the app has been
      installed:</para>
    <screen>&quot;activities&quot;: {
    &quot;dhis&quot;: {
        &quot;href&quot;: &quot;http://apps.dhis2.org/demo&quot;
    }
 }</screen>
    <para>To read the JSON structure into Javascript, you can use a regular AJAX request and parse
      the JSON into an object. Most Javascript libraries provide some support, for instance with
      jQuery it can be done like this:</para>
    <screen>$.getJSON( &quot;manifest.webapp&quot;, function( json ) {
    var apiBaseUrl = json.activities.dhis.href + &quot;/api&quot;;
} );</screen>
    <para>The app can contain HTML, Javascript, CSS, images and other files whic may be required to support it . The file structure could look
      something like this:</para>
    <screen>/
/manifest.webapp    #manifest file (mandatory)
/css/               #css stylesheets (optional)
/img/               #images (optional)
/js/&#160;               #javascripts (optional)</screen>
    <para>Note that it is only the <filename>manifest.webapp</filename> file which must be placed in the root. It is up
      the developer to organize CSS, images and Javascript files inside the app as needed.</para>
    <para>All the files in the project should be compressed into a standard zip archive. Note that
      the manifest.webapp file must be located on the root of the zip archive (do not include a
      parent directory in the archive). The zip archive can then be installed into DHIS2 as you
      will see in the next section.</para>
  </section>
  <section>
    <title>Configuring DHIS2 for Apps Installation</title>
    <para>The <emphasis>App Manager</emphasis> is found under Services → Apps. If your logged in user has
      permissions to view and edit settings you will see the Settings link in the left menu.</para>
    <para><inlinegraphic fileref="resources/images/apps/app-settings.png" format="PNG" align="center" width="70%"/></para>
    <para>The following settings can be configured:</para>
    <orderedlist>
      <listitem>
        <para><emphasis role="italic">App Installation Folder:</emphasis> The folder on the file
          system where apps are unpacked. By default this is under the expanded DHIS folder suffixed
          by /apps. If you like to install your apps in another location, say <filename>www</filename> folder of Apache
          2, you can specify the absolute path to that directory on the server, making your apps to
          be unpacked at that location.</para>
      </listitem>
      <listitem>
        <para><emphasis role="italic">App Base URL:</emphasis> The URL through which the apps can be
          found on the Web. By default this is the same as your DHIS 2 URL suffixed by /apps. If you
          are installing apps through a different web server you need to provide the full URL for
          that web server.</para>
      </listitem>
    </orderedlist>
  </section>
  <section>
    <title>Installing Apps into DHIS 2</title>
    <para>Apps can be installed by uploading zip file into the App Manager. In, Services →
      Apps, click on the <emphasis role="italic">App Store</emphasis> menu item.</para>
    <para><inlinegraphic fileref="resources/images/apps/app-management.png" format="PNG" align="center"/></para>
    <para>The app can be uploaded by pressing the Browse button and after selecting the zip package,
      the file is uploaded automatically and installed in DHIS 2. You can also browse through apps
      in the DHIS2 <ulink url="https://www.dhis2.org/appstore">app store</ulink> and download apps from there. The DHIS2 app store allows for app searching,
      reviewing, commenting, requesting features, rating on the apps by the community.</para>
  </section>
  <section>
    <title>Launching Apps</title>
    <para>After installation, your apps will be integrated with the menu system and can be accessed
      under services and from the module overview page. It can also be accessed from the home page
      of the apps module.  Click on an app in the list in order to launch it.</para>
  </section>
  <section>
    <title>Web-API for Apps</title>
    <para>From version 2.14 there is also additional support for apps through the web-api. The <emphasis role="italic">/api/apps</emphasis>
      endpoint can be used for installing, deleting, listing apps.</para>
    <para>To list all installed apps (mediatypes works as usual, accept header or file extension,
      xml and json):
      <screen>curl -X GET -u user:pass -H &quot;Accept: application/json&quot; http://server.com/api/apps</screen></para>
    <para>To install an app, the following command can be issued:
      <screen>curl -X POST -u user:pass -F file=@app.zip http://server.com/api/apps</screen></para>
    <para>To delete an app, you can issue the following command:
      <screen>curl -X DELETE -u user:pass http://server.com/api/apps/&lt;app-name&gt;</screen></para>
    <para>To force a reload of currently installed apps , you can issue the following command. This
      is useful if you added a file manually directly to the file system, instead of uploading
      through the DHIS 2 user interface.
      <screen>curl -X PUT -u user:pass http://server.com/api/apps</screen></para>
    <para>To let DHIS 2 serve apps from the Web API make sure to set the "App base URL" to point to
      the apps resource, e.g.:<screen>http://server.com/api/apps</screen></para>
    <para>The "App installation folder" should be set as normal to the location on the file system
      of where the apps should be stored.</para>
  </section>
  <section>
    <title>Adding the DHIS 2 menu to your app</title>
    <para>In order to maintain a uniform appearance within DHIS 2 it is possible to add your
      app&apos;s icon to the top menu. To begin, we start with a screenshot of the top-menu of the
      DHIS 2 user interface, where your app&apos;s icon will be placed. <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="resources/images/apps/top-menu.png" format="PNG" width="80%"/>
          </imageobject>
        </mediaobject>
      </screenshot></para>
    <para>The first step is to adding the menu is including the style-sheets and scripts that are required. All JavaScript files are found in <filename role="italic">/dhis-web-commons/javascripts/dhis2/</filename> while the CSS files are found in <filename role="italic">/dhis-web-commons/font-awesome/css/font-awesome.min.css</filename> and <filename role="italic">/dhis-web-commons/css/menu.css</filename>
</para>
    <para> The following list provides a description of each file:</para>
    <para>
      <emphasis role="bold">Scripts:</emphasis>
      <itemizedlist>
        <listitem>
          <para><filename role="italic">jquery.min.js / jqLite / angular.element</filename> : One of
            the mentioned libraries needs to be present. DHIS2 employs a stripped-down version of
              <classname>jqLite</classname> that is present in <emphasis>Angular</emphasis> for the
            menu. This makes it compatible with jqLite and jQuery. </para>
        </listitem>
        <listitem>
          <para><filename role="italic">dhis2.translate.js</filename> : Translate script that
            translates menu text to your current dhis language setting</para>
        </listitem>
        <listitem>
          <para><filename role="italic">dhis2.menu.js</filename> : Menu logic that deals with all
            the ordering, searching of menu items etc.</para>
        </listitem>
        <listitem>
          <para><emphasis role="italic">dhis2/dhis2.menu.ui.js</emphasis> : Menu ui code that has
            all the menu user interface related code for scrolling, shortcuts, HTML markup
            etc.</para>
        </listitem>
      </itemizedlist>
      <emphasis role="bold">Stylesheets:</emphasis>
      <itemizedlist>
        <listitem>
          <para><filename role="italic">font-awesome.min.css</filename> : Used for various icons in
            the menu.</para>
        </listitem>
        <listitem>
          <para><filename role="italic">menu.css</filename> : The CSS used for the menu.</para>
        </listitem>
        <listitem>
          <para><filename role="italic">dhis2.translate.js</filename> : Translate script that
            translates menu text to your current DHIS2 language setting</para>
        </listitem>
      </itemizedlist></para>
    <para>For a app that will run using the same URL structure as the normal DHIS2 apps, only the
      JavaScript files and style-sheets are required. If your app is running using a different URL
      structure than the default one, you will need to specify a <parameter>base URL </parameter>before including the menu scripts. Including the scripts and style-sheets would
      look something like the following:
      <screen>&lt;!-- DHIS2 Settings initialization for a baseUrl that is used for the menu --&gt;
&lt;script&gt;
 window.dhis2 = window.dhis2 || {};
 dhis2.settings = dhis2.settings || {};
 dhis2.settings.baseUrl = &apos;dhis&apos;;
&lt;/script&gt;

&lt;!-- Menu scripts --&gt;
 &lt;script type=&quot;text/javascript&quot; src=&quot;./dhis-web-commons/javascripts/dhis2/dhis2.translate.js&quot;&gt;
&lt;/script&gt;
 &lt;script type=&quot;text/javascript&quot; src=&quot;./dhis-web-commons/javascripts/dhis2/dhis2.menu.js&quot;&gt;
&lt;/script&gt;
 &lt;script type=&quot;text/javascript&quot; src=&quot;./dhis-web-commons/javascripts/dhis2/dhis2.menu.ui.js&quot;&gt;&lt;/script&gt;

&lt;!-- Stylesheets related to the menu --&gt;
&lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; href=&quot;./dhis-web-commons/font-awesome/css/font-awesome.min.css&quot;/&gt;
&lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; media=&quot;screen&quot; href=&quot;./dhis-web-commons/css/menu.css&quot;&gt;
    </screen></para>
    <para>To clarify, the following part will initialize some variables. If you do not use any other
      DHIS2 libraries these will not be set and therefore will have to be set by you first. After
      that the third line specifies a base URL of where your DHIS 2 instance is running on your web
      server. For example: <emphasis role="italic">dhis</emphasis> in this case means the server is
      running at <emphasis role="italic">http://localhost:8080/dhis/</emphasis>. Note that you will
      only have to specify the part after the web address. So if your instance is running at
        <emphasis role="italic">http://www.example.com/myInstance/</emphasis> you would only specify
        <emphasis role="italic">myInstance</emphasis>
      <screen>&lt;!-- Example setting for myInstance --&gt;
&lt;script&gt;
window.dhis2 = window.dhis2 || {};
dhis2.settings = dhis2.settings || {};
dhis2.settings.baseUrl = &apos;myInstance&apos;;
&lt;/script&gt;</screen></para>
    <para>The above will only include the necessary scripts to be able to show the menu. To actually
      make it show up we have two possibilities. The first one is using a basic &lt;div&gt; element
      with an id attribute.
      <screen>&lt;div id=&quot;dhisDropDownMenu&quot;&gt;&lt;/div&gt;      </screen>An alternative
      is available when your application uses angular. We have included a directive to show the
      menu. This would be used as follows: <screen>&lt;div d2-menu&gt;&lt;/div&gt;      </screen>The
      element type in this case does not really matter. As long as you include the <emphasis role="italic">d2-menu</emphasis> directive. To be able to use the menu directive you would
      also have to include the directive in your angular app. The angular module containing the
      directive is called <emphasis role="italic">d2Menu</emphasis>.<screen>&apos;use strict&apos;;

var appMenu = angular.module(&apos;appMenu&apos;,
  [&apos;ngRoute&apos;, 
  &apos;ngCookies&apos;,
  &apos;d2Menu&apos;]);      </screen></para>
    <para>The minimum amount of code to show the menu is shown below. You could use this as a
      starting reference.
      <screen>&lt;!DOCTYPE html&gt;
&lt;html &gt;&lt;!--ng-app=&quot;appMenu&quot;&gt; --&gt;
    &lt;head&gt;
        &lt;title&gt;Dhis2 Menu&lt;/title&gt;

        &lt;!-- Stylesheets related to the menu --&gt;
        &lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; href=&quot;./dhis-web-commons/font-awesome/css/font-awesome.min.css&quot;/&gt;
        &lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; media=&quot;screen&quot; href=&quot;./dhis-web-commons/css/menu.css&quot;&gt;
    &lt;/head&gt;

    &lt;body style=&quot;background-color: black;&quot;&gt;

        &lt;div id=&quot;dhisDropDownMenu&quot;&gt;&lt;/div&gt;

        &lt;!-- DHIS2 Settings initialization for a baseUrl that is used for the menu --&gt;
        &lt;script&gt;
            window.dhis2 = window.dhis2 || {};
            dhis2.settings = dhis2.settings || {};
            dhis2.settings.baseUrl = &apos;dhis&apos;;
        &lt;/script&gt;

        &lt;!-- Menu scripts --&gt;
        &lt;script type=&quot;text/javascript&quot; src=&quot;./dhis-web-commons/javascripts/jQuery/jquery.min.js&quot;&gt;&lt;/script&gt;
        &lt;script type=&quot;text/javascript&quot; src=&quot;./dhis-web-commons/javascripts/dhis2/dhis2.translate.js&quot;&gt;&lt;/script&gt;
        &lt;script type=&quot;text/javascript&quot; src=&quot;./dhis-web-commons/javascripts/dhis2/dhis2.menu.js&quot;&gt;&lt;/script&gt;
        &lt;script type=&quot;text/javascript&quot; src=&quot;./dhis-web-commons/javascripts/dhis2/dhis2.menu.ui.js&quot;&gt;&lt;/script&gt;

    &lt;/body&gt;
&lt;/html&gt;</screen></para>
  </section>
</chapter>
